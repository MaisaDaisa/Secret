#include <iostream>
#include <algorithm>

using namespace std;

// Aq constebi tu ar gamoviyene programa errors migdebda kompilaciis dros
const int N = 4;
const int M = 4;

/*
დაწერეთ პროგრამა (დინამიური დაპროგრამების გამოყენებით), რომელიც NxM ზომის (2≤N≤100, 2≤M≤1000),
მოცემული A მასივისაგან ააგებს იგივე ზომის ისეთ B მასივს, რომლის B[i,j] ელემენტი წარმოადგენს მაქსიმალურს
A მასივში (i,j) პოზიციის მარცხნივ და ზემოთ განლაგებულ ელემენტებს შორის (თვით (i,j) პოზიციის ჩათვლით);
*/

void shevseba(int mas[N][M]) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cout << "chawere ricxvi: " << i << " " << j << " poziciaze: ";
            cin >> mas[i][j];
        }
    }
}

void printMas(int mas[N][M]) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cout << mas[i][j] << " ";
        }
        cout << endl;
    }
    cout << endl << endl << endl;
}

void B_mas_shevseba(int B[N][M], int A[N][M]) {
    B[0][0] = A[0][0];
    for (int i = 1; i < N; i++) {
        B[i][0] = max(A[i][0], B[i - 1][0]);
    }
    for (int i = 1; i < N; i++) {
        B[0][i] = max(A[0][i], B[0][i - 1]);
    }

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            B[i][j] = max({ A[i][j], B[i-1][j], B[i][j-1]});
        }
    }
}



int main() {
    if (!(2 <= N && N <= 100)) {
        cout << "N ararswori diapazoni" << endl;
        return 2;
    }
    if (!(2 <= M && M <= 1000)) {
        cout << "M ararswori diapazoni" << endl;
        return 2;
    }

    int A[N][M] = {0};
    int B[N][M] = {0};

    shevseba(A);
    printMas(A);

    B_mas_shevseba(B, A);
    printMas(B);
    




    return 0;
}
